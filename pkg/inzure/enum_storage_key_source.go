// Code generated by go generate; DO NOT EDIT.

package inzure


import (
	"fmt"
	azpkg "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
)


type StorageKeySource int

const (
	StorageKeySourceUnknown StorageKeySource = 0
    StorageKeySourceStorage StorageKeySource = 1
    StorageKeySourceKeyVault StorageKeySource = 2
)



func (it *StorageKeySource) FromAzure(az *azpkg.KeySource) {
	if (az == nil) {
		*it = StorageKeySourceUnknown
		return
	}
	switch(*az) {
	case azpkg.KeySourceMicrosoftStorage:
		*it = StorageKeySourceStorage
	case azpkg.KeySourceMicrosoftKeyvault:
		*it = StorageKeySourceKeyVault
	default:
		*it = StorageKeySourceUnknown
	}
}
func (it StorageKeySource) IsStorage() UnknownBool {
	if it == StorageKeySourceUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == StorageKeySourceStorage)
}
func (it StorageKeySource) IsKeyVault() UnknownBool {
	if it == StorageKeySourceUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == StorageKeySourceKeyVault)
}

func (it StorageKeySource) String() string {
	switch (it) {
	case StorageKeySourceStorage:
		return "Storage"
	case StorageKeySourceKeyVault:
		return "KeyVault"
	default:
		return fmt.Sprintf("StorageKeySource(%d)", it)
	}
}

