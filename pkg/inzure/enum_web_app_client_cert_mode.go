// Code generated by go generate; DO NOT EDIT.

package inzure


import (
	"fmt"
	azpkg "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/appservice/armappservice"
)


type WebAppClientCertMode int

const (
	WebAppClientCertModeUnknown WebAppClientCertMode = 0
    WebAppClientCertModeRequired WebAppClientCertMode = 1
    WebAppClientCertModeOptional WebAppClientCertMode = 2
    WebAppClientCertModeOptionalInteractiveUser WebAppClientCertMode = 3
)



func (it *WebAppClientCertMode) FromAzure(az *azpkg.ClientCertMode) {
	if (az == nil) {
		*it = WebAppClientCertModeUnknown
		return
	}
	switch(*az) {
	case azpkg.ClientCertModeRequired:
		*it = WebAppClientCertModeRequired
	case azpkg.ClientCertModeOptional:
		*it = WebAppClientCertModeOptional
	case azpkg.ClientCertModeOptionalInteractiveUser:
		*it = WebAppClientCertModeOptionalInteractiveUser
	default:
		*it = WebAppClientCertModeUnknown
	}
}
func (it WebAppClientCertMode) IsUnknown() bool {
	return it == WebAppClientCertModeUnknown
}

func (it WebAppClientCertMode) IsKnown() bool {
	return it != WebAppClientCertModeUnknown
}

func (it WebAppClientCertMode) IsRequired() UnknownBool {
	if it == WebAppClientCertModeUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == WebAppClientCertModeRequired)
}

func (it WebAppClientCertMode) IsOptional() UnknownBool {
	if it == WebAppClientCertModeUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == WebAppClientCertModeOptional)
}

func (it WebAppClientCertMode) IsOptionalInteractiveUser() UnknownBool {
	if it == WebAppClientCertModeUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == WebAppClientCertModeOptionalInteractiveUser)
}


func (it WebAppClientCertMode) String() string {
	switch (it) {
	case WebAppClientCertModeRequired:
		return "Required"
	case WebAppClientCertModeOptional:
		return "Optional"
	case WebAppClientCertModeOptionalInteractiveUser:
		return "OptionalInteractiveUser"
	default:
		return fmt.Sprintf("WebAppClientCertMode(%d)", it)
	}
}

