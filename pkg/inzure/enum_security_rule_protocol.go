// Code generated by go generate; DO NOT EDIT.

package inzure


import (
	azpkg "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork"
)


type SecurityRuleProtocol int

const (
	ProtocolUnknown SecurityRuleProtocol = 0
    ProtocolAll SecurityRuleProtocol = 1
    ProtocolTCP SecurityRuleProtocol = 2
    ProtocolUDP SecurityRuleProtocol = 3
)



func (it *SecurityRuleProtocol) FromAzure(az *azpkg.SecurityRuleProtocol) {
	if (az == nil) {
		*it = ProtocolUnknown
		return
	}
	switch(*az) {
	case azpkg.SecurityRuleProtocolAsterisk:
		*it = ProtocolAll
	case azpkg.SecurityRuleProtocolTCP:
		*it = ProtocolTCP
	case azpkg.SecurityRuleProtocolUDP:
		*it = ProtocolUDP
	default:
		*it = ProtocolUnknown
	}
}
func (it SecurityRuleProtocol) IsUnknown() bool {
	return it == ProtocolUnknown
}

func (it SecurityRuleProtocol) IsKnown() bool {
	return it != ProtocolUnknown
}

func (it SecurityRuleProtocol) IsAll() UnknownBool {
	if it == ProtocolUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == ProtocolAll)
}

func (it SecurityRuleProtocol) IsTCP() UnknownBool {
	if it == ProtocolUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == ProtocolTCP)
}

func (it SecurityRuleProtocol) IsUDP() UnknownBool {
	if it == ProtocolUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == ProtocolUDP)
}


