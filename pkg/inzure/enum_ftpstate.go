// Code generated by go generate; DO NOT EDIT.

package inzure


import (
	azpkg "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/appservice/armappservice"
)


type FTPState int

const (
	FTPStateUnknown FTPState = 0
    FTPStateDisabled FTPState = 1
    FTPStateFTPSOnly FTPState = 2
    FTPStateAll FTPState = 3
)



func (it *FTPState) FromAzure(az *azpkg.FtpsState) {
	if (az == nil) {
		*it = FTPStateUnknown
		return
	}
	switch(*az) {
	case azpkg.FtpsStateDisabled:
		*it = FTPStateDisabled
	case azpkg.FtpsStateFtpsOnly:
		*it = FTPStateFTPSOnly
	case azpkg.FtpsStateAllAllowed:
		*it = FTPStateAll
	default:
		*it = FTPStateUnknown
	}
}
func (it FTPState) IsUnknown() bool {
	return it == FTPStateUnknown
}

func (it FTPState) IsKnown() bool {
	return it != FTPStateUnknown
}

func (it FTPState) IsDisabled() UnknownBool {
	if it == FTPStateUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == FTPStateDisabled)
}

func (it FTPState) IsFTPSOnly() UnknownBool {
	if it == FTPStateUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == FTPStateFTPSOnly)
}

func (it FTPState) IsAll() UnknownBool {
	if it == FTPStateUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == FTPStateAll)
}


