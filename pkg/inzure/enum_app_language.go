// Code generated by go generate; DO NOT EDIT.

package inzure


import "fmt"


type AppLanguage int

const (
	LanguageUnknown AppLanguage = 0
    LanguageNode AppLanguage = 1
    LanguagePHP AppLanguage = 2
    LanguageJava AppLanguage = 3
    LanguageDotNet AppLanguage = 4
    LanguageRuby AppLanguage = 5
    LanguagePython AppLanguage = 6
    LanguageDocker AppLanguage = 7
    LanguagePowerShell AppLanguage = 8
)

func (it AppLanguage) IsNode() UnknownBool {
	if it == LanguageUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == LanguageNode)
}
func (it AppLanguage) IsPHP() UnknownBool {
	if it == LanguageUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == LanguagePHP)
}
func (it AppLanguage) IsJava() UnknownBool {
	if it == LanguageUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == LanguageJava)
}
func (it AppLanguage) IsDotNet() UnknownBool {
	if it == LanguageUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == LanguageDotNet)
}
func (it AppLanguage) IsRuby() UnknownBool {
	if it == LanguageUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == LanguageRuby)
}
func (it AppLanguage) IsPython() UnknownBool {
	if it == LanguageUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == LanguagePython)
}
func (it AppLanguage) IsDocker() UnknownBool {
	if it == LanguageUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == LanguageDocker)
}
func (it AppLanguage) IsPowerShell() UnknownBool {
	if it == LanguageUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == LanguagePowerShell)
}

func (it AppLanguage) String() string {
	switch (it) {
	case LanguageNode:
		return "Node"
	case LanguagePHP:
		return "PHP"
	case LanguageJava:
		return "Java"
	case LanguageDotNet:
		return "DotNet"
	case LanguageRuby:
		return "Ruby"
	case LanguagePython:
		return "Python"
	case LanguageDocker:
		return "Docker"
	case LanguagePowerShell:
		return "PowerShell"
	default:
		return fmt.Sprintf("AppLanguage(%d)", it)
	}
}

