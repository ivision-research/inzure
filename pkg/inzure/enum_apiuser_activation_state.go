// Code generated by go generate; DO NOT EDIT.

package inzure


import (
	"fmt"
	azpkg "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/apimanagement/armapimanagement"
)


type APIUserActivationState int

const (
	APIUserStateUnknown APIUserActivationState = 0
    APIUserStateActive APIUserActivationState = 1
    APIUserStatePending APIUserActivationState = 2
    APIUserStateBlocked APIUserActivationState = 3
    APIUserStateDeleted APIUserActivationState = 4
)



func (it *APIUserActivationState) FromAzure(az *azpkg.UserState) {
	if (az == nil) {
		*it = APIUserStateUnknown
		return
	}
	switch(*az) {
	case azpkg.UserStateActive:
		*it = APIUserStateActive
	case azpkg.UserStatePending:
		*it = APIUserStatePending
	case azpkg.UserStateBlocked:
		*it = APIUserStateBlocked
	case azpkg.UserStateDeleted:
		*it = APIUserStateDeleted
	default:
		*it = APIUserStateUnknown
	}
}
func (it APIUserActivationState) IsUnknown() bool {
	return it == APIUserStateUnknown
}

func (it APIUserActivationState) IsKnown() bool {
	return it != APIUserStateUnknown
}

func (it APIUserActivationState) IsActive() UnknownBool {
	if it == APIUserStateUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == APIUserStateActive)
}

func (it APIUserActivationState) IsPending() UnknownBool {
	if it == APIUserStateUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == APIUserStatePending)
}

func (it APIUserActivationState) IsBlocked() UnknownBool {
	if it == APIUserStateUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == APIUserStateBlocked)
}

func (it APIUserActivationState) IsDeleted() UnknownBool {
	if it == APIUserStateUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == APIUserStateDeleted)
}


func (it APIUserActivationState) String() string {
	switch (it) {
	case APIUserStateActive:
		return "Active"
	case APIUserStatePending:
		return "Pending"
	case APIUserStateBlocked:
		return "Blocked"
	case APIUserStateDeleted:
		return "Deleted"
	default:
		return fmt.Sprintf("APIUserActivationState(%d)", it)
	}
}

