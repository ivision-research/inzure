// Code generated by go generate; DO NOT EDIT.

package inzure


import (
	"fmt"
	azpkg "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage"
)


type FileShareProtocol int

const (
	FileShareProtocolUnknown FileShareProtocol = 0
    FileShareProtocolNFS FileShareProtocol = 1
    FileShareProtocolSMB FileShareProtocol = 2
)



func (it *FileShareProtocol) FromAzure(az *azpkg.EnabledProtocols) {
	if (az == nil) {
		*it = FileShareProtocolUnknown
		return
	}
	switch(*az) {
	case azpkg.EnabledProtocolsNFS:
		*it = FileShareProtocolNFS
	case azpkg.EnabledProtocolsSMB:
		*it = FileShareProtocolSMB
	default:
		*it = FileShareProtocolUnknown
	}
}
func (it FileShareProtocol) IsUnknown() bool {
	return it == FileShareProtocolUnknown
}

func (it FileShareProtocol) IsKnown() bool {
	return it != FileShareProtocolUnknown
}

func (it FileShareProtocol) IsNFS() UnknownBool {
	if it == FileShareProtocolUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == FileShareProtocolNFS)
}

func (it FileShareProtocol) IsSMB() UnknownBool {
	if it == FileShareProtocolUnknown {
		return BoolUnknown
	}
	return UnknownFromBool(it == FileShareProtocolSMB)
}


func (it FileShareProtocol) String() string {
	switch (it) {
	case FileShareProtocolNFS:
		return "NFS"
	case FileShareProtocolSMB:
		return "SMB"
	default:
		return fmt.Sprintf("FileShareProtocol(%d)", it)
	}
}

